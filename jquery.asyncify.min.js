/*
 * jQuery Asyncify
 *
 * @version 0.2.0
 * @date 07-10-2014
 * @author Adam Cuppy (http://github.com/acuppy)
 * @copyright Coding ZEAL (http://codingzeal.com)
*/

$(function(){var a;return a=function(){function a(a,b){$.isFunction(b)&&(b={then:b}),this.form=$(a),this.callbacks=$.extend({},this.defaultCallbacks,b)}return a.prototype.defaultCallbacks={before:$.noop,done:$.noop,fail:$.noop,always:$.noop,then:$.noop},a.prototype.action=function(){return this.form.prop("action")},a.prototype.method=function(){return this.form.prop("method")},a.prototype.bind=function(){return this.form.on("submit",function(a){return function(b){return b.preventDefault(),a.callbacks.before(a.form),a._xhr()}}(this))},a.prototype._xhr=function(){var a;return a=$.ajax(this.action(),{type:this.method(),data:this.form.serialize()}),a.done(this._bindToForm(this.callbacks.done)),a.fail(this._bindToForm(this.callbacks.fail)),a.always(this._bindToForm(this.callbacks.always)),a.then(this._bindToForm(this.callbacks.then)),a},a.prototype._bindToForm=function(a){return $.proxy(a,this.form)},a}(),$.fn.asyncify=function(b){return this.each(function(){new a(this,b).bind()})}});